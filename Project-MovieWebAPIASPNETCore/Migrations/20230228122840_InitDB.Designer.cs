// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Project_MovieWebAPIASPNETCore.Models;

#nullable disable

namespace Project_MovieWebAPIASPNETCore.Migrations
{
    [DbContext(typeof(MovieDBContext))]
    [Migration("20230228122840_InitDB")]
    partial class InitDB
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CharacterMovie", b =>
                {
                    b.Property<int>("MovieId")
                        .HasColumnType("int");

                    b.Property<int>("CharacterId")
                        .HasColumnType("int");

                    b.HasKey("MovieId", "CharacterId");

                    b.HasIndex("CharacterId");

                    b.ToTable("CharacterMovie");

                    b.HasData(
                        new
                        {
                            MovieId = 1,
                            CharacterId = 1
                        },
                        new
                        {
                            MovieId = 2,
                            CharacterId = 1
                        },
                        new
                        {
                            MovieId = 3,
                            CharacterId = 1
                        },
                        new
                        {
                            MovieId = 4,
                            CharacterId = 1
                        });
                });

            modelBuilder.Entity("Project_MovieWebAPIASPNETCore.Models.Domain.Character", b =>
                {
                    b.Property<int>("CharacterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CharacterId"));

                    b.Property<string>("Alias")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FullName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Gender")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Picture")
                        .HasMaxLength(2055)
                        .HasColumnType("nvarchar(2055)");

                    b.HasKey("CharacterId");

                    b.ToTable("Characters");

                    b.HasData(
                        new
                        {
                            CharacterId = 1,
                            Alias = "David",
                            FullName = "David Swax",
                            Gender = "Male",
                            Picture = "PicturLink"
                        },
                        new
                        {
                            CharacterId = 2,
                            Alias = "Leo",
                            FullName = "Leonardo Di Caprio",
                            Gender = "Male",
                            Picture = "PicturLink"
                        });
                });

            modelBuilder.Entity("Project_MovieWebAPIASPNETCore.Models.Domain.Franchise", b =>
                {
                    b.Property<int>("FranchiseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FranchiseId"));

                    b.Property<string>("Description")
                        .HasMaxLength(3000)
                        .HasColumnType("nvarchar(3000)");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("FranchiseId");

                    b.ToTable("Franchises");

                    b.HasData(
                        new
                        {
                            FranchiseId = 1,
                            Description = "Welcome to GothenburgBIO",
                            Name = "HBOGothernburg"
                        },
                        new
                        {
                            FranchiseId = 2,
                            Description = "Welcome to StockholmBIO",
                            Name = "HBOStockholm"
                        });
                });

            modelBuilder.Entity("Project_MovieWebAPIASPNETCore.Models.Domain.Movie", b =>
                {
                    b.Property<int>("MovieId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MovieId"));

                    b.Property<string>("Director")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("FranchiseId")
                        .HasColumnType("int");

                    b.Property<string>("Genre")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Picture")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Title")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Trailer")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<int?>("Year")
                        .HasColumnType("int");

                    b.HasKey("MovieId");

                    b.HasIndex("FranchiseId");

                    b.ToTable("Movies");

                    b.HasData(
                        new
                        {
                            MovieId = 1,
                            Director = "David",
                            FranchiseId = 1,
                            Genre = "Action",
                            Picture = "Link",
                            Title = "The memory",
                            Trailer = "YouTubeLink",
                            Year = 2021
                        },
                        new
                        {
                            MovieId = 2,
                            Director = "John",
                            FranchiseId = 2,
                            Genre = "Action",
                            Picture = "Link",
                            Title = "Bat Man",
                            Trailer = "YouTubeLink",
                            Year = 2020
                        },
                        new
                        {
                            MovieId = 3,
                            Director = "John",
                            FranchiseId = 2,
                            Genre = "Action",
                            Picture = "Link",
                            Title = "Spider Man",
                            Trailer = "YouTubeLink",
                            Year = 2020
                        },
                        new
                        {
                            MovieId = 4,
                            Director = "John",
                            FranchiseId = 1,
                            Genre = "Action",
                            Picture = "Link",
                            Title = "Maze Runner",
                            Trailer = "YouTubeLink",
                            Year = 2018
                        });
                });

            modelBuilder.Entity("CharacterMovie", b =>
                {
                    b.HasOne("Project_MovieWebAPIASPNETCore.Models.Domain.Character", null)
                        .WithMany()
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Project_MovieWebAPIASPNETCore.Models.Domain.Movie", null)
                        .WithMany()
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Project_MovieWebAPIASPNETCore.Models.Domain.Movie", b =>
                {
                    b.HasOne("Project_MovieWebAPIASPNETCore.Models.Domain.Franchise", "Franchise")
                        .WithMany("Movies")
                        .HasForeignKey("FranchiseId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Franchise");
                });

            modelBuilder.Entity("Project_MovieWebAPIASPNETCore.Models.Domain.Franchise", b =>
                {
                    b.Navigation("Movies");
                });
#pragma warning restore 612, 618
        }
    }
}
